#!/bin/sh

MODDIR=/lib/modules
insmod $MODDIR/encrypt.ko
insmod $MODDIR/vfd.ko
insmod $MODDIR/aotom.ko

echo "AR-P" > /dev/vfd

if [ -e /var/etc/.firstboot ]; then
   echo "180s" >/dev/vfd
   echo "WAIT 1 min"
   rm /var/etc/.firstboot
   touch /dev/.devfsd
fi


echo "load" > /dev/vfd

/etc/init.d/mountvirtfs start

/etc/init.d/portmap start

insmod $MODDIR/e2_proc.ko

insmod $MODDIR/autofs4.ko

/usr/sbin/automount --timeout=5 /autofs file /etc/auto.usb

if [ ! -e /var/etc/.firstboot ]; then
   echo "Starting DEBUG Interface"
   /etc/init.d/mountall start
   /etc/init.d/hostname start

   echo "starting telnetd"
   /usr/sbin/telnetd -l /bin/login

   insmod $MODDIR/simu_button.ko

   echo "init lircd"
   /usr/bin/lircd
 
   echo "init stmfb"
   insmod $MODDIR/stmcore-display-sti7111.ko
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:pal:yuv:yuv #display1=720x576-16@50:3m:pal:cvbs;

   echo "Load"   
   echo "LOADING MODULES" > /dev/vfd

   echo "load a firmware"
    if [ -e /var/config/options/DTS_downmix_ON ]; then
      /bin/ustslave /dev/st231-1 /boot/audio_dts.elf
    else   
      /bin/ustslave /dev/st231-1 /boot/audio.elf
    fi
   echo "load v firmware"
      /bin/ustslave /dev/st231-0 /boot/video.elf
if [ -e /hdd/movie ] && [ ! `mount | grep -o "hdd"` ]; then 
rm -r /hdd/movie
fi
if [ -e /media/hdd ]; then
rm -r /media/hdd
fi

   echo "init embx"
   insmod $MODDIR/embxshell.ko
   insmod $MODDIR/embxmailbox.ko mailbox0=0xfe211000:136:set2 mailbox1=0xfe212000:0 ;
   insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0x40000000:0x10000000 ;
   insmod $MODDIR/mme_host.ko transport0=shm

   echo "init AVS"
   insmod $MODDIR/avs.ko type=spark_avs #type=stv6417

usropt="DTS_downmix_ON DiscardLateFrame SWTS HighSR"

for z in $usropt
 do
 if [ -e /var/config/options/$z ]; then
  export $z="1"
 else
  export $z="0"
 fi
done
    var=`cat /proc/cmdline`
    var=${var##*STB_ID=}
    var=${var:0:8}
    if [ $var != "09:00:0A" ]; then
    exit 0
    fi
player=`cat /proc/stb/player/version`
   player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
   echo "init player $player"

   insmod $MODDIR/mmelog.ko
   insmod $MODDIR/ksound.ko
   insmod $MODDIR/p2div64.ko
   insmod $MODDIR/stm_v4l2.ko
   if [ $player -gt 131 ]; then
		insmod $MODDIR/stmvout.ko
		insmod $MODDIR/stmvbi.ko
   fi
   insmod $MODDIR/pseudocard.ko

   insmod $MODDIR/stv090x.ko
   if [ $player -gt 131 ]; then
		insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
		insmod $MODDIR/stm_monitor.ko
		insmod $MODDIR/stmsysfs.ko
 		insmod $MODDIR/stmdvb.ko highSR="$HighSR" swts="$SWTS"   
   else
		insmod $MODDIR/pti.ko
		insmod $MODDIR/stmdvb.ko
		insmod $MODDIR/stm_monitor.ko
   fi	
   insmod $MODDIR/player2.ko  discardlateframe="$DiscardLateFrame"  useoldaudiofw="$DTS_downmix_ON"
   insmod $MODDIR/sth264pp.ko
   insmod $MODDIR/stmalloc.ko
   insmod $MODDIR/platform.ko
   insmod $MODDIR/silencegen.ko
   insmod $MODDIR/smartcard.ko
   insmod $MODDIR/ntfs.ko
   insmod $MODDIR/bpamem.ko
   mknod /dev/bpamem c 153 0
	
   showiframe -p /boot/bootlogo.mvi &
   stfbcontrol a 0

   echo "init lircd"
   /usr/bin/lircd

   mknod /dev/rc c 147 1 
   mknod /dev/sci0 c 169 0
   mknod /dev/sci1 c 169 1 
   major=$(awk "\$2==\"sparkid\" {print \$1}" /proc/devices)
   rm -f /dev/sparkid
   mknod /dev/sparkid c $major 0 

   
  /bin/evremote2 spark &
   
   stfbcontrol a 255

   echo " e2 "


   /etc/init.d/mountall start

   /etc/init.d/hostname start

   echo "starting telnetd"
   /usr/sbin/telnetd -l /bin/login
   /etc/init.d/vsftpd start
   /usr/sbin/inetd

     NFS=$(grep -c 'nfs' /proc/cmdline)
   if [ "$NFS" -eq "1" ]; then 
      echo "Booting from nfs, don't set network" 
   else 
      if [ -e /etc/network/interfaces ]; then 
	 ip addr flush eth0 
	 /etc/init.d/networking stop 
	 TEST=$(grep -c 'dhcp' /etc/network/interfaces) 
	 if [ "$(TEST)" -eq "1" ]; then 
	    echo dhcp
            /etc/init.d/udhcpc start 
	 fi 
	 /etc/init.d/networking start 
      fi 
   fi

   echo "LOADING e2" > /dev/vfd
   echo "LOADING e2"
   # cron daemon
   (sleep 60; /usr/sbin/crond) & 
   until false
   do

      echo "starting e2->"
      crontab /var/spool/cron/crontabs/root
      /usr/lib/enigma2/python/Plugins/Extensions/AR-P/automount.sh
      /usr/local/bin/enigma2
      rtv=$?
      echo "e2 ended <- RTV: " $rtv
      case "$rtv" in
		0) echo "0"
		   echo "E2 ERROR"
      		   init 6;;
		1) echo "1"
		   echo "SHUTDOWN"
                   init 0;;
		2) echo "2"
		   echo "REBOOT"
		   init 6;;
		3) echo "3"
		   echo "E2 RESTART"
		   echo "0" > /proc/progress
		   showiframe -p /boot/bootlogo.mvi &;;
		4) echo "4"
		   echo "Moderate E2 standby"
		   sync
		   /bin/vdstandby -n
		   echo "0" > /proc/progress
		   showiframe -p /boot/bootlogo.mvi &;;
		*) echo "*"
		   echo "ERROR"
		   echo "0" > /proc/progress
		  showiframe -p /boot/bootlogo.mvi &;;
      esac
   done 
fi
#never reached
echo "REBOOT" > /dev/vfd
echo "REBOOT SPARK"
reboot -f
